% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cherry_models.R
\name{cherry_models}
\alias{cherry_models}
\title{Exhaustively test liner mixed-effects models}
\usage{
cherry_models(
  model_data,
  response,
  fixed_inter,
  fixed_no_inter,
  max_comb = 3,
  comb_comb = 2,
  random,
  n.workers = 2,
  dry = FALSE,
  background = FALSE
)
}
\arguments{
\item{model_data}{data.frame or tibble: The data for the model containing all variables passed to
other arguments.}

\item{response}{character of length one: The dependent variable.}

\item{fixed_inter}{character of length one or more: Independent variables for which interaction
terms shall be tested.}

\item{fixed_no_inter}{character of length one or more: Independent variables for which NO
interaction terms shall be tested.}

\item{max_comb}{integer of length one: Number of fixed effects that go into an interaction term.}

\item{comb_comb}{integer of length one: Number of interaction terms to combine,}

\item{random}{character of length one or more: The random effect(s) in `lmer` syntax.}

\item{n.workers}{integer of length one: Number of threads for parallelization.}

\item{dry}{logical of length one: If `TRUE` does not compute models but outputs the formulas.}

\item{background}{logical of length one: Whether to run the computation as a subprocess in the
background (a separate R session). Note that in this case a handler is returned instead of a
data.frame. Use `get_process_result()` to interact with the background process.}
}
\value{
data.frame or r_process
}
\description{
Compute thousands of linear mixed-effects models to determine the model that explains your data
best. To this end, all combinations of fixed effects with and without interaction are
generated and computed with `lmerTest::lmer()`. Subsequently, a step-wise model reduction is
performed on every model with `lmerTest::step()`. The process is parallelized an can be run as
subprocess in the background. See vignette("CherryModels") for an introduction.
}
\examples{

x <- cherry_models(
  model_data = mpg,
  response = "cty",
  fixed_inter = c("displ", "cyl", "year"),
  fixed_no_inter = "hwy",
  max_comb = 3,
  comb_comb = 2,
  random = "(1|model)",
  n.workers = 2,
  dry = FALSE,
  background = FALSE
)


# show formulas only
cherry_models(
  model_data = mpg,
  response = "cty",
  fixed_inter = c("displ", "cyl", "year"),
  fixed_no_inter = "hwy",
  max_comb = 3,
  comb_comb = 2,
  random = "(1|model)",
  n.workers = 2,
  dry = TRUE,
  background = FALSE
)


# run as background process
proc <- cherry_models(
  model_data = mpg,
  response = "cty",
  fixed_inter = c("displ", "cyl", "year"),
  fixed_no_inter = "hwy",
  max_comb = 3,
  comb_comb = 2,
  random = "(1|model)",
  n.workers = 2,
  dry = FALSE,
  background = TRUE
)

# get progress and eventually results from process
x <- get_process_results(proc)


# view results in a shiny app
show_report(x)

}
